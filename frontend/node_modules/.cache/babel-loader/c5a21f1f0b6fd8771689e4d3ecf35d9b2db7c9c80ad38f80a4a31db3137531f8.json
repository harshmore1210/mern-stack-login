{"ast":null,"code":"var _jsxFileName = \"C:\\\\2025 maxgen\\\\front\\\\auth-app\\\\src\\\\page\\\\Register.js\",\n  _s = $RefreshSig$();\nimport './Register.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [isRegister, setIsRegister] = useState(true);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isRegister) {\n      console.log('Registering:', formData);\n      // send POST to Node backend\n    } else {\n      console.log('Logging in:', {\n        email: formData.email,\n        password: formData.password\n      });\n      //  send POST to Node backend\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegister ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [isRegister && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isRegister ? 'Register' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [isRegister ? 'Already have an account?' : \"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRegister(!isRegister),\n        children: isRegister ? 'Login here' : 'Register here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"NcVjjalKAzfzqmdkkeiNTni0jTo=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","isRegister","setIsRegister","formData","setFormData","username","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/2025 maxgen/front/auth-app/src/page/Register.js"],"sourcesContent":["import './Register.css';\r\nimport React, { useState } from 'react';\r\nconst Register = () => {\r\n\r\n\r\n    const [isRegister, setIsRegister] = useState(true);\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (isRegister) {\r\n            console.log('Registering:', formData);\r\n            // send POST to Node backend\r\n        } else {\r\n            console.log('Logging in:', { email: formData.email, password: formData.password });\r\n            //  send POST to Node backend\r\n        }\r\n    };\r\n\r\n    \r\n  return (\r\n    <div className=\"container\">\r\n        <h2>{isRegister ? 'Register' : 'Login'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n            {isRegister && (\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username\"\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            )}\r\n            <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={handleChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange}\r\n                required\r\n            />\r\n            <button type=\"submit\">{isRegister ? 'Register' : 'Login'}</button>\r\n        </form>\r\n        <p>\r\n            {isRegister ? 'Already have an account?' : \"Don't have an account?\"}\r\n            <button onClick={() => setIsRegister(!isRegister)}>\r\n                {isRegister ? 'Login here' : 'Register here'}\r\n            </button>\r\n        </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}